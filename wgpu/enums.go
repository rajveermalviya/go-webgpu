// Code generated by github.com/rajveermalviya/go-webgpu/cmd/gen_enums. DO NOT EDIT.

package wgpu

type AdapterType uint32

const (
	AdapterType_DiscreteGPU   AdapterType = 0
	AdapterType_IntegratedGPU AdapterType = 1
	AdapterType_CPU           AdapterType = 2
	AdapterType_Unknown       AdapterType = 3
)

func (v AdapterType) String() string {
	switch v {
	case AdapterType_DiscreteGPU:
		return "DiscreteGPU"
	case AdapterType_IntegratedGPU:
		return "IntegratedGPU"
	case AdapterType_CPU:
		return "CPU"
	case AdapterType_Unknown:
		return "Unknown"
	default:
		return ""
	}
}

type AddressMode uint32

const (
	AddressMode_Repeat       AddressMode = 0
	AddressMode_MirrorRepeat AddressMode = 1
	AddressMode_ClampToEdge  AddressMode = 2
)

func (v AddressMode) String() string {
	switch v {
	case AddressMode_Repeat:
		return "Repeat"
	case AddressMode_MirrorRepeat:
		return "MirrorRepeat"
	case AddressMode_ClampToEdge:
		return "ClampToEdge"
	default:
		return ""
	}
}

type BackendType uint32

const (
	BackendType_Null     BackendType = 0
	BackendType_WebGPU   BackendType = 1
	BackendType_D3D11    BackendType = 2
	BackendType_D3D12    BackendType = 3
	BackendType_Metal    BackendType = 4
	BackendType_Vulkan   BackendType = 5
	BackendType_OpenGL   BackendType = 6
	BackendType_OpenGLES BackendType = 7
)

func (v BackendType) String() string {
	switch v {
	case BackendType_Null:
		return "Null"
	case BackendType_WebGPU:
		return "WebGPU"
	case BackendType_D3D11:
		return "D3D11"
	case BackendType_D3D12:
		return "D3D12"
	case BackendType_Metal:
		return "Metal"
	case BackendType_Vulkan:
		return "Vulkan"
	case BackendType_OpenGL:
		return "OpenGL"
	case BackendType_OpenGLES:
		return "OpenGLES"
	default:
		return ""
	}
}

type BlendFactor uint32

const (
	BlendFactor_Zero              BlendFactor = 0
	BlendFactor_One               BlendFactor = 1
	BlendFactor_Src               BlendFactor = 2
	BlendFactor_OneMinusSrc       BlendFactor = 3
	BlendFactor_SrcAlpha          BlendFactor = 4
	BlendFactor_OneMinusSrcAlpha  BlendFactor = 5
	BlendFactor_Dst               BlendFactor = 6
	BlendFactor_OneMinusDst       BlendFactor = 7
	BlendFactor_DstAlpha          BlendFactor = 8
	BlendFactor_OneMinusDstAlpha  BlendFactor = 9
	BlendFactor_SrcAlphaSaturated BlendFactor = 10
	BlendFactor_Constant          BlendFactor = 11
	BlendFactor_OneMinusConstant  BlendFactor = 12
)

func (v BlendFactor) String() string {
	switch v {
	case BlendFactor_Zero:
		return "Zero"
	case BlendFactor_One:
		return "One"
	case BlendFactor_Src:
		return "Src"
	case BlendFactor_OneMinusSrc:
		return "OneMinusSrc"
	case BlendFactor_SrcAlpha:
		return "SrcAlpha"
	case BlendFactor_OneMinusSrcAlpha:
		return "OneMinusSrcAlpha"
	case BlendFactor_Dst:
		return "Dst"
	case BlendFactor_OneMinusDst:
		return "OneMinusDst"
	case BlendFactor_DstAlpha:
		return "DstAlpha"
	case BlendFactor_OneMinusDstAlpha:
		return "OneMinusDstAlpha"
	case BlendFactor_SrcAlphaSaturated:
		return "SrcAlphaSaturated"
	case BlendFactor_Constant:
		return "Constant"
	case BlendFactor_OneMinusConstant:
		return "OneMinusConstant"
	default:
		return ""
	}
}

type BlendOperation uint32

const (
	BlendOperation_Add             BlendOperation = 0
	BlendOperation_Subtract        BlendOperation = 1
	BlendOperation_ReverseSubtract BlendOperation = 2
	BlendOperation_Min             BlendOperation = 3
	BlendOperation_Max             BlendOperation = 4
)

func (v BlendOperation) String() string {
	switch v {
	case BlendOperation_Add:
		return "Add"
	case BlendOperation_Subtract:
		return "Subtract"
	case BlendOperation_ReverseSubtract:
		return "ReverseSubtract"
	case BlendOperation_Min:
		return "Min"
	case BlendOperation_Max:
		return "Max"
	default:
		return ""
	}
}

type BufferBindingType uint32

const (
	BufferBindingType_Undefined       BufferBindingType = 0
	BufferBindingType_Uniform         BufferBindingType = 1
	BufferBindingType_Storage         BufferBindingType = 2
	BufferBindingType_ReadOnlyStorage BufferBindingType = 3
)

func (v BufferBindingType) String() string {
	switch v {
	case BufferBindingType_Undefined:
		return "Undefined"
	case BufferBindingType_Uniform:
		return "Uniform"
	case BufferBindingType_Storage:
		return "Storage"
	case BufferBindingType_ReadOnlyStorage:
		return "ReadOnlyStorage"
	default:
		return ""
	}
}

type BufferMapAsyncStatus uint32

const (
	BufferMapAsyncStatus_Success                 BufferMapAsyncStatus = 0
	BufferMapAsyncStatus_Error                   BufferMapAsyncStatus = 1
	BufferMapAsyncStatus_Unknown                 BufferMapAsyncStatus = 2
	BufferMapAsyncStatus_DeviceLost              BufferMapAsyncStatus = 3
	BufferMapAsyncStatus_DestroyedBeforeCallback BufferMapAsyncStatus = 4
	BufferMapAsyncStatus_UnmappedBeforeCallback  BufferMapAsyncStatus = 5
)

func (v BufferMapAsyncStatus) String() string {
	switch v {
	case BufferMapAsyncStatus_Success:
		return "Success"
	case BufferMapAsyncStatus_Error:
		return "Error"
	case BufferMapAsyncStatus_Unknown:
		return "Unknown"
	case BufferMapAsyncStatus_DeviceLost:
		return "DeviceLost"
	case BufferMapAsyncStatus_DestroyedBeforeCallback:
		return "DestroyedBeforeCallback"
	case BufferMapAsyncStatus_UnmappedBeforeCallback:
		return "UnmappedBeforeCallback"
	default:
		return ""
	}
}

type BufferUsage uint32

const (
	BufferUsage_None         BufferUsage = 0
	BufferUsage_MapRead      BufferUsage = 1
	BufferUsage_MapWrite     BufferUsage = 2
	BufferUsage_CopySrc      BufferUsage = 4
	BufferUsage_CopyDst      BufferUsage = 8
	BufferUsage_Index        BufferUsage = 16
	BufferUsage_Vertex       BufferUsage = 32
	BufferUsage_Uniform      BufferUsage = 64
	BufferUsage_Storage      BufferUsage = 128
	BufferUsage_Indirect     BufferUsage = 256
	BufferUsage_QueryResolve BufferUsage = 512
)

func (v BufferUsage) String() string {
	switch v {
	case BufferUsage_None:
		return "None"
	case BufferUsage_MapRead:
		return "MapRead"
	case BufferUsage_MapWrite:
		return "MapWrite"
	case BufferUsage_CopySrc:
		return "CopySrc"
	case BufferUsage_CopyDst:
		return "CopyDst"
	case BufferUsage_Index:
		return "Index"
	case BufferUsage_Vertex:
		return "Vertex"
	case BufferUsage_Uniform:
		return "Uniform"
	case BufferUsage_Storage:
		return "Storage"
	case BufferUsage_Indirect:
		return "Indirect"
	case BufferUsage_QueryResolve:
		return "QueryResolve"
	default:
		return ""
	}
}

type ColorWriteMask uint32

const (
	ColorWriteMask_None  ColorWriteMask = 0
	ColorWriteMask_Red   ColorWriteMask = 1
	ColorWriteMask_Green ColorWriteMask = 2
	ColorWriteMask_Blue  ColorWriteMask = 4
	ColorWriteMask_Alpha ColorWriteMask = 8
	ColorWriteMask_All   ColorWriteMask = 15
)

func (v ColorWriteMask) String() string {
	switch v {
	case ColorWriteMask_None:
		return "None"
	case ColorWriteMask_Red:
		return "Red"
	case ColorWriteMask_Green:
		return "Green"
	case ColorWriteMask_Blue:
		return "Blue"
	case ColorWriteMask_Alpha:
		return "Alpha"
	case ColorWriteMask_All:
		return "All"
	default:
		return ""
	}
}

type CompareFunction uint32

const (
	CompareFunction_Undefined    CompareFunction = 0
	CompareFunction_Never        CompareFunction = 1
	CompareFunction_Less         CompareFunction = 2
	CompareFunction_LessEqual    CompareFunction = 3
	CompareFunction_Greater      CompareFunction = 4
	CompareFunction_GreaterEqual CompareFunction = 5
	CompareFunction_Equal        CompareFunction = 6
	CompareFunction_NotEqual     CompareFunction = 7
	CompareFunction_Always       CompareFunction = 8
)

func (v CompareFunction) String() string {
	switch v {
	case CompareFunction_Undefined:
		return "Undefined"
	case CompareFunction_Never:
		return "Never"
	case CompareFunction_Less:
		return "Less"
	case CompareFunction_LessEqual:
		return "LessEqual"
	case CompareFunction_Greater:
		return "Greater"
	case CompareFunction_GreaterEqual:
		return "GreaterEqual"
	case CompareFunction_Equal:
		return "Equal"
	case CompareFunction_NotEqual:
		return "NotEqual"
	case CompareFunction_Always:
		return "Always"
	default:
		return ""
	}
}

type CompilationInfoRequestStatus uint32

const (
	CompilationInfoRequestStatus_Success    CompilationInfoRequestStatus = 0
	CompilationInfoRequestStatus_Error      CompilationInfoRequestStatus = 1
	CompilationInfoRequestStatus_DeviceLost CompilationInfoRequestStatus = 2
	CompilationInfoRequestStatus_Unknown    CompilationInfoRequestStatus = 3
)

func (v CompilationInfoRequestStatus) String() string {
	switch v {
	case CompilationInfoRequestStatus_Success:
		return "Success"
	case CompilationInfoRequestStatus_Error:
		return "Error"
	case CompilationInfoRequestStatus_DeviceLost:
		return "DeviceLost"
	case CompilationInfoRequestStatus_Unknown:
		return "Unknown"
	default:
		return ""
	}
}

type CompilationMessageType uint32

const (
	CompilationMessageType_Error   CompilationMessageType = 0
	CompilationMessageType_Warning CompilationMessageType = 1
	CompilationMessageType_Info    CompilationMessageType = 2
)

func (v CompilationMessageType) String() string {
	switch v {
	case CompilationMessageType_Error:
		return "Error"
	case CompilationMessageType_Warning:
		return "Warning"
	case CompilationMessageType_Info:
		return "Info"
	default:
		return ""
	}
}

type ComputePassTimestampLocation uint32

const (
	ComputePassTimestampLocation_Beginning ComputePassTimestampLocation = 0
	ComputePassTimestampLocation_End       ComputePassTimestampLocation = 1
)

func (v ComputePassTimestampLocation) String() string {
	switch v {
	case ComputePassTimestampLocation_Beginning:
		return "Beginning"
	case ComputePassTimestampLocation_End:
		return "End"
	default:
		return ""
	}
}

type CreatePipelineAsyncStatus uint32

const (
	CreatePipelineAsyncStatus_Success         CreatePipelineAsyncStatus = 0
	CreatePipelineAsyncStatus_Error           CreatePipelineAsyncStatus = 1
	CreatePipelineAsyncStatus_DeviceLost      CreatePipelineAsyncStatus = 2
	CreatePipelineAsyncStatus_DeviceDestroyed CreatePipelineAsyncStatus = 3
	CreatePipelineAsyncStatus_Unknown         CreatePipelineAsyncStatus = 4
)

func (v CreatePipelineAsyncStatus) String() string {
	switch v {
	case CreatePipelineAsyncStatus_Success:
		return "Success"
	case CreatePipelineAsyncStatus_Error:
		return "Error"
	case CreatePipelineAsyncStatus_DeviceLost:
		return "DeviceLost"
	case CreatePipelineAsyncStatus_DeviceDestroyed:
		return "DeviceDestroyed"
	case CreatePipelineAsyncStatus_Unknown:
		return "Unknown"
	default:
		return ""
	}
}

type CullMode uint32

const (
	CullMode_None  CullMode = 0
	CullMode_Front CullMode = 1
	CullMode_Back  CullMode = 2
)

func (v CullMode) String() string {
	switch v {
	case CullMode_None:
		return "None"
	case CullMode_Front:
		return "Front"
	case CullMode_Back:
		return "Back"
	default:
		return ""
	}
}

type DeviceLostReason uint32

const (
	DeviceLostReason_Undefined DeviceLostReason = 0
	DeviceLostReason_Destroyed DeviceLostReason = 1
)

func (v DeviceLostReason) String() string {
	switch v {
	case DeviceLostReason_Undefined:
		return "Undefined"
	case DeviceLostReason_Destroyed:
		return "Destroyed"
	default:
		return ""
	}
}

type ErrorFilter uint32

const (
	ErrorFilter_Validation  ErrorFilter = 0
	ErrorFilter_OutOfMemory ErrorFilter = 1
)

func (v ErrorFilter) String() string {
	switch v {
	case ErrorFilter_Validation:
		return "Validation"
	case ErrorFilter_OutOfMemory:
		return "OutOfMemory"
	default:
		return ""
	}
}

type ErrorType uint32

const (
	ErrorType_NoError     ErrorType = 0
	ErrorType_Validation  ErrorType = 1
	ErrorType_OutOfMemory ErrorType = 2
	ErrorType_Unknown     ErrorType = 3
	ErrorType_DeviceLost  ErrorType = 4
)

func (v ErrorType) String() string {
	switch v {
	case ErrorType_NoError:
		return "NoError"
	case ErrorType_Validation:
		return "Validation"
	case ErrorType_OutOfMemory:
		return "OutOfMemory"
	case ErrorType_Unknown:
		return "Unknown"
	case ErrorType_DeviceLost:
		return "DeviceLost"
	default:
		return "Unknown"
	}
}

type FeatureName uint32

const (
	FeatureName_Undefined               FeatureName = 0
	FeatureName_DepthClipControl        FeatureName = 1
	FeatureName_Depth24UnormStencil8    FeatureName = 2
	FeatureName_Depth32FloatStencil8    FeatureName = 3
	FeatureName_TimestampQuery          FeatureName = 4
	FeatureName_PipelineStatisticsQuery FeatureName = 5
	FeatureName_TextureCompressionBC    FeatureName = 6
	FeatureName_TextureCompressionETC2  FeatureName = 7
	FeatureName_TextureCompressionASTC  FeatureName = 8
	FeatureName_IndirectFirstInstance   FeatureName = 9
)

func (v FeatureName) String() string {
	switch v {
	case FeatureName_Undefined:
		return "Undefined"
	case FeatureName_DepthClipControl:
		return "DepthClipControl"
	case FeatureName_Depth24UnormStencil8:
		return "Depth24UnormStencil8"
	case FeatureName_Depth32FloatStencil8:
		return "Depth32FloatStencil8"
	case FeatureName_TimestampQuery:
		return "TimestampQuery"
	case FeatureName_PipelineStatisticsQuery:
		return "PipelineStatisticsQuery"
	case FeatureName_TextureCompressionBC:
		return "TextureCompressionBC"
	case FeatureName_TextureCompressionETC2:
		return "TextureCompressionETC2"
	case FeatureName_TextureCompressionASTC:
		return "TextureCompressionASTC"
	case FeatureName_IndirectFirstInstance:
		return "IndirectFirstInstance"
	default:
		return ""
	}
}

type FilterMode uint32

const (
	FilterMode_Nearest FilterMode = 0
	FilterMode_Linear  FilterMode = 1
)

func (v FilterMode) String() string {
	switch v {
	case FilterMode_Nearest:
		return "Nearest"
	case FilterMode_Linear:
		return "Linear"
	default:
		return ""
	}
}

type FrontFace uint32

const (
	FrontFace_CCW FrontFace = 0
	FrontFace_CW  FrontFace = 1
)

func (v FrontFace) String() string {
	switch v {
	case FrontFace_CCW:
		return "CCW"
	case FrontFace_CW:
		return "CW"
	default:
		return ""
	}
}

type IndexFormat uint32

const (
	IndexFormat_Undefined IndexFormat = 0
	IndexFormat_Uint16    IndexFormat = 1
	IndexFormat_Uint32    IndexFormat = 2
)

func (v IndexFormat) String() string {
	switch v {
	case IndexFormat_Undefined:
		return "Undefined"
	case IndexFormat_Uint16:
		return "Uint16"
	case IndexFormat_Uint32:
		return "Uint32"
	default:
		return ""
	}
}

type LoadOp uint32

const (
	LoadOp_Undefined LoadOp = 0
	LoadOp_Clear     LoadOp = 1
	LoadOp_Load      LoadOp = 2
)

func (v LoadOp) String() string {
	switch v {
	case LoadOp_Undefined:
		return "Undefined"
	case LoadOp_Clear:
		return "Clear"
	case LoadOp_Load:
		return "Load"
	default:
		return ""
	}
}

type LogLevel uint32

const (
	LogLevel_Off   LogLevel = 0
	LogLevel_Error LogLevel = 1
	LogLevel_Warn  LogLevel = 2
	LogLevel_Info  LogLevel = 3
	LogLevel_Debug LogLevel = 4
	LogLevel_Trace LogLevel = 5
)

func (v LogLevel) String() string {
	switch v {
	case LogLevel_Off:
		return "Off"
	case LogLevel_Error:
		return "Error"
	case LogLevel_Warn:
		return "Warn"
	case LogLevel_Info:
		return "Info"
	case LogLevel_Debug:
		return "Debug"
	case LogLevel_Trace:
		return "Trace"
	default:
		return ""
	}
}

type MapMode uint32

const (
	MapMode_None  MapMode = 0
	MapMode_Read  MapMode = 1
	MapMode_Write MapMode = 2
)

func (v MapMode) String() string {
	switch v {
	case MapMode_None:
		return "None"
	case MapMode_Read:
		return "Read"
	case MapMode_Write:
		return "Write"
	default:
		return ""
	}
}

type MipmapFilterMode uint32

const (
	MipmapFilterMode_Nearest MipmapFilterMode = 0
	MipmapFilterMode_Linear  MipmapFilterMode = 1
)

func (v MipmapFilterMode) String() string {
	switch v {
	case MipmapFilterMode_Nearest:
		return "Nearest"
	case MipmapFilterMode_Linear:
		return "Linear"
	default:
		return ""
	}
}

type NativeFeature uint32

const NativeFeature_TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES NativeFeature = 268435456

func (v NativeFeature) String() string {
	switch v {
	case NativeFeature_TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES:
		return "TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES"
	default:
		return ""
	}
}

type PipelineStatisticName uint32

const (
	PipelineStatisticName_VertexShaderInvocations   PipelineStatisticName = 0
	PipelineStatisticName_ClipperInvocations        PipelineStatisticName = 1
	PipelineStatisticName_ClipperPrimitivesOut      PipelineStatisticName = 2
	PipelineStatisticName_FragmentShaderInvocations PipelineStatisticName = 3
	PipelineStatisticName_ComputeShaderInvocations  PipelineStatisticName = 4
)

func (v PipelineStatisticName) String() string {
	switch v {
	case PipelineStatisticName_VertexShaderInvocations:
		return "VertexShaderInvocations"
	case PipelineStatisticName_ClipperInvocations:
		return "ClipperInvocations"
	case PipelineStatisticName_ClipperPrimitivesOut:
		return "ClipperPrimitivesOut"
	case PipelineStatisticName_FragmentShaderInvocations:
		return "FragmentShaderInvocations"
	case PipelineStatisticName_ComputeShaderInvocations:
		return "ComputeShaderInvocations"
	default:
		return ""
	}
}

type PowerPreference uint32

const (
	PowerPreference_Undefined       PowerPreference = 0
	PowerPreference_LowPower        PowerPreference = 1
	PowerPreference_HighPerformance PowerPreference = 2
)

func (v PowerPreference) String() string {
	switch v {
	case PowerPreference_Undefined:
		return "Undefined"
	case PowerPreference_LowPower:
		return "LowPower"
	case PowerPreference_HighPerformance:
		return "HighPerformance"
	default:
		return ""
	}
}

type PredefinedColorSpace uint32

const (
	PredefinedColorSpace_Undefined PredefinedColorSpace = 0
	PredefinedColorSpace_Srgb      PredefinedColorSpace = 1
)

func (v PredefinedColorSpace) String() string {
	switch v {
	case PredefinedColorSpace_Undefined:
		return "Undefined"
	case PredefinedColorSpace_Srgb:
		return "Srgb"
	default:
		return ""
	}
}

type PresentMode uint32

const (
	PresentMode_Immediate PresentMode = 0
	PresentMode_Mailbox   PresentMode = 1
	PresentMode_Fifo      PresentMode = 2
)

func (v PresentMode) String() string {
	switch v {
	case PresentMode_Immediate:
		return "Immediate"
	case PresentMode_Mailbox:
		return "Mailbox"
	case PresentMode_Fifo:
		return "Fifo"
	default:
		return ""
	}
}

type PrimitiveTopology uint32

const (
	PrimitiveTopology_PointList     PrimitiveTopology = 0
	PrimitiveTopology_LineList      PrimitiveTopology = 1
	PrimitiveTopology_LineStrip     PrimitiveTopology = 2
	PrimitiveTopology_TriangleList  PrimitiveTopology = 3
	PrimitiveTopology_TriangleStrip PrimitiveTopology = 4
)

func (v PrimitiveTopology) String() string {
	switch v {
	case PrimitiveTopology_PointList:
		return "PointList"
	case PrimitiveTopology_LineList:
		return "LineList"
	case PrimitiveTopology_LineStrip:
		return "LineStrip"
	case PrimitiveTopology_TriangleList:
		return "TriangleList"
	case PrimitiveTopology_TriangleStrip:
		return "TriangleStrip"
	default:
		return ""
	}
}

type QueryType uint32

const (
	QueryType_Occlusion          QueryType = 0
	QueryType_PipelineStatistics QueryType = 1
	QueryType_Timestamp          QueryType = 2
)

func (v QueryType) String() string {
	switch v {
	case QueryType_Occlusion:
		return "Occlusion"
	case QueryType_PipelineStatistics:
		return "PipelineStatistics"
	case QueryType_Timestamp:
		return "Timestamp"
	default:
		return ""
	}
}

type QueueWorkDoneStatus uint32

const (
	QueueWorkDoneStatus_Success    QueueWorkDoneStatus = 0
	QueueWorkDoneStatus_Error      QueueWorkDoneStatus = 1
	QueueWorkDoneStatus_Unknown    QueueWorkDoneStatus = 2
	QueueWorkDoneStatus_DeviceLost QueueWorkDoneStatus = 3
)

func (v QueueWorkDoneStatus) String() string {
	switch v {
	case QueueWorkDoneStatus_Success:
		return "Success"
	case QueueWorkDoneStatus_Error:
		return "Error"
	case QueueWorkDoneStatus_Unknown:
		return "Unknown"
	case QueueWorkDoneStatus_DeviceLost:
		return "DeviceLost"
	default:
		return ""
	}
}

type RenderPassTimestampLocation uint32

const (
	RenderPassTimestampLocation_Beginning RenderPassTimestampLocation = 0
	RenderPassTimestampLocation_End       RenderPassTimestampLocation = 1
)

func (v RenderPassTimestampLocation) String() string {
	switch v {
	case RenderPassTimestampLocation_Beginning:
		return "Beginning"
	case RenderPassTimestampLocation_End:
		return "End"
	default:
		return ""
	}
}

type RequestAdapterStatus uint32

const (
	RequestAdapterStatus_Success     RequestAdapterStatus = 0
	RequestAdapterStatus_Unavailable RequestAdapterStatus = 1
	RequestAdapterStatus_Error       RequestAdapterStatus = 2
	RequestAdapterStatus_Unknown     RequestAdapterStatus = 3
)

func (v RequestAdapterStatus) String() string {
	switch v {
	case RequestAdapterStatus_Success:
		return "Success"
	case RequestAdapterStatus_Unavailable:
		return "Unavailable"
	case RequestAdapterStatus_Error:
		return "Error"
	case RequestAdapterStatus_Unknown:
		return "Unknown"
	default:
		return ""
	}
}

type RequestDeviceStatus uint32

const (
	RequestDeviceStatus_Success RequestDeviceStatus = 0
	RequestDeviceStatus_Error   RequestDeviceStatus = 1
	RequestDeviceStatus_Unknown RequestDeviceStatus = 2
)

func (v RequestDeviceStatus) String() string {
	switch v {
	case RequestDeviceStatus_Success:
		return "Success"
	case RequestDeviceStatus_Error:
		return "Error"
	case RequestDeviceStatus_Unknown:
		return "Unknown"
	default:
		return ""
	}
}

type SamplerBindingType uint32

const (
	SamplerBindingType_Undefined    SamplerBindingType = 0
	SamplerBindingType_Filtering    SamplerBindingType = 1
	SamplerBindingType_NonFiltering SamplerBindingType = 2
	SamplerBindingType_Comparison   SamplerBindingType = 3
)

func (v SamplerBindingType) String() string {
	switch v {
	case SamplerBindingType_Undefined:
		return "Undefined"
	case SamplerBindingType_Filtering:
		return "Filtering"
	case SamplerBindingType_NonFiltering:
		return "NonFiltering"
	case SamplerBindingType_Comparison:
		return "Comparison"
	default:
		return ""
	}
}

type ShaderStage uint32

const (
	ShaderStage_None     ShaderStage = 0
	ShaderStage_Vertex   ShaderStage = 1
	ShaderStage_Fragment ShaderStage = 2
	ShaderStage_Compute  ShaderStage = 4
)

func (v ShaderStage) String() string {
	switch v {
	case ShaderStage_None:
		return "None"
	case ShaderStage_Vertex:
		return "Vertex"
	case ShaderStage_Fragment:
		return "Fragment"
	case ShaderStage_Compute:
		return "Compute"
	default:
		return ""
	}
}

type StencilOperation uint32

const (
	StencilOperation_Keep           StencilOperation = 0
	StencilOperation_Zero           StencilOperation = 1
	StencilOperation_Replace        StencilOperation = 2
	StencilOperation_Invert         StencilOperation = 3
	StencilOperation_IncrementClamp StencilOperation = 4
	StencilOperation_DecrementClamp StencilOperation = 5
	StencilOperation_IncrementWrap  StencilOperation = 6
	StencilOperation_DecrementWrap  StencilOperation = 7
)

func (v StencilOperation) String() string {
	switch v {
	case StencilOperation_Keep:
		return "Keep"
	case StencilOperation_Zero:
		return "Zero"
	case StencilOperation_Replace:
		return "Replace"
	case StencilOperation_Invert:
		return "Invert"
	case StencilOperation_IncrementClamp:
		return "IncrementClamp"
	case StencilOperation_DecrementClamp:
		return "DecrementClamp"
	case StencilOperation_IncrementWrap:
		return "IncrementWrap"
	case StencilOperation_DecrementWrap:
		return "DecrementWrap"
	default:
		return ""
	}
}

type StorageTextureAccess uint32

const (
	StorageTextureAccess_Undefined StorageTextureAccess = 0
	StorageTextureAccess_WriteOnly StorageTextureAccess = 1
)

func (v StorageTextureAccess) String() string {
	switch v {
	case StorageTextureAccess_Undefined:
		return "Undefined"
	case StorageTextureAccess_WriteOnly:
		return "WriteOnly"
	default:
		return ""
	}
}

type StoreOp uint32

const (
	StoreOp_Undefined StoreOp = 0
	StoreOp_Store     StoreOp = 1
	StoreOp_Discard   StoreOp = 2
)

func (v StoreOp) String() string {
	switch v {
	case StoreOp_Undefined:
		return "Undefined"
	case StoreOp_Store:
		return "Store"
	case StoreOp_Discard:
		return "Discard"
	default:
		return ""
	}
}

type TextureAspect uint32

const (
	TextureAspect_All         TextureAspect = 0
	TextureAspect_StencilOnly TextureAspect = 1
	TextureAspect_DepthOnly   TextureAspect = 2
)

func (v TextureAspect) String() string {
	switch v {
	case TextureAspect_All:
		return "All"
	case TextureAspect_StencilOnly:
		return "StencilOnly"
	case TextureAspect_DepthOnly:
		return "DepthOnly"
	default:
		return ""
	}
}

type TextureComponentType uint32

const (
	TextureComponentType_Float           TextureComponentType = 0
	TextureComponentType_Sint            TextureComponentType = 1
	TextureComponentType_Uint            TextureComponentType = 2
	TextureComponentType_DepthComparison TextureComponentType = 3
)

func (v TextureComponentType) String() string {
	switch v {
	case TextureComponentType_Float:
		return "Float"
	case TextureComponentType_Sint:
		return "Sint"
	case TextureComponentType_Uint:
		return "Uint"
	case TextureComponentType_DepthComparison:
		return "DepthComparison"
	default:
		return ""
	}
}

type TextureDimension uint32

const (
	TextureDimension_1D TextureDimension = 0
	TextureDimension_2D TextureDimension = 1
	TextureDimension_3D TextureDimension = 2
)

func (v TextureDimension) String() string {
	switch v {
	case TextureDimension_1D:
		return "1D"
	case TextureDimension_2D:
		return "2D"
	case TextureDimension_3D:
		return "3D"
	default:
		return ""
	}
}

type TextureFormat uint32

const (
	TextureFormat_Undefined            TextureFormat = 0
	TextureFormat_R8Unorm              TextureFormat = 1
	TextureFormat_R8Snorm              TextureFormat = 2
	TextureFormat_R8Uint               TextureFormat = 3
	TextureFormat_R8Sint               TextureFormat = 4
	TextureFormat_R16Uint              TextureFormat = 5
	TextureFormat_R16Sint              TextureFormat = 6
	TextureFormat_R16Float             TextureFormat = 7
	TextureFormat_RG8Unorm             TextureFormat = 8
	TextureFormat_RG8Snorm             TextureFormat = 9
	TextureFormat_RG8Uint              TextureFormat = 10
	TextureFormat_RG8Sint              TextureFormat = 11
	TextureFormat_R32Float             TextureFormat = 12
	TextureFormat_R32Uint              TextureFormat = 13
	TextureFormat_R32Sint              TextureFormat = 14
	TextureFormat_RG16Uint             TextureFormat = 15
	TextureFormat_RG16Sint             TextureFormat = 16
	TextureFormat_RG16Float            TextureFormat = 17
	TextureFormat_RGBA8Unorm           TextureFormat = 18
	TextureFormat_RGBA8UnormSrgb       TextureFormat = 19
	TextureFormat_RGBA8Snorm           TextureFormat = 20
	TextureFormat_RGBA8Uint            TextureFormat = 21
	TextureFormat_RGBA8Sint            TextureFormat = 22
	TextureFormat_BGRA8Unorm           TextureFormat = 23
	TextureFormat_BGRA8UnormSrgb       TextureFormat = 24
	TextureFormat_RGB10A2Unorm         TextureFormat = 25
	TextureFormat_RG11B10Ufloat        TextureFormat = 26
	TextureFormat_RGB9E5Ufloat         TextureFormat = 27
	TextureFormat_RG32Float            TextureFormat = 28
	TextureFormat_RG32Uint             TextureFormat = 29
	TextureFormat_RG32Sint             TextureFormat = 30
	TextureFormat_RGBA16Uint           TextureFormat = 31
	TextureFormat_RGBA16Sint           TextureFormat = 32
	TextureFormat_RGBA16Float          TextureFormat = 33
	TextureFormat_RGBA32Float          TextureFormat = 34
	TextureFormat_RGBA32Uint           TextureFormat = 35
	TextureFormat_RGBA32Sint           TextureFormat = 36
	TextureFormat_Stencil8             TextureFormat = 37
	TextureFormat_Depth16Unorm         TextureFormat = 38
	TextureFormat_Depth24Plus          TextureFormat = 39
	TextureFormat_Depth24PlusStencil8  TextureFormat = 40
	TextureFormat_Depth24UnormStencil8 TextureFormat = 41
	TextureFormat_Depth32Float         TextureFormat = 42
	TextureFormat_Depth32FloatStencil8 TextureFormat = 43
	TextureFormat_BC1RGBAUnorm         TextureFormat = 44
	TextureFormat_BC1RGBAUnormSrgb     TextureFormat = 45
	TextureFormat_BC2RGBAUnorm         TextureFormat = 46
	TextureFormat_BC2RGBAUnormSrgb     TextureFormat = 47
	TextureFormat_BC3RGBAUnorm         TextureFormat = 48
	TextureFormat_BC3RGBAUnormSrgb     TextureFormat = 49
	TextureFormat_BC4RUnorm            TextureFormat = 50
	TextureFormat_BC4RSnorm            TextureFormat = 51
	TextureFormat_BC5RGUnorm           TextureFormat = 52
	TextureFormat_BC5RGSnorm           TextureFormat = 53
	TextureFormat_BC6HRGBUfloat        TextureFormat = 54
	TextureFormat_BC6HRGBFloat         TextureFormat = 55
	TextureFormat_BC7RGBAUnorm         TextureFormat = 56
	TextureFormat_BC7RGBAUnormSrgb     TextureFormat = 57
	TextureFormat_ETC2RGB8Unorm        TextureFormat = 58
	TextureFormat_ETC2RGB8UnormSrgb    TextureFormat = 59
	TextureFormat_ETC2RGB8A1Unorm      TextureFormat = 60
	TextureFormat_ETC2RGB8A1UnormSrgb  TextureFormat = 61
	TextureFormat_ETC2RGBA8Unorm       TextureFormat = 62
	TextureFormat_ETC2RGBA8UnormSrgb   TextureFormat = 63
	TextureFormat_EACR11Unorm          TextureFormat = 64
	TextureFormat_EACR11Snorm          TextureFormat = 65
	TextureFormat_EACRG11Unorm         TextureFormat = 66
	TextureFormat_EACRG11Snorm         TextureFormat = 67
	TextureFormat_ASTC4x4Unorm         TextureFormat = 68
	TextureFormat_ASTC4x4UnormSrgb     TextureFormat = 69
	TextureFormat_ASTC5x4Unorm         TextureFormat = 70
	TextureFormat_ASTC5x4UnormSrgb     TextureFormat = 71
	TextureFormat_ASTC5x5Unorm         TextureFormat = 72
	TextureFormat_ASTC5x5UnormSrgb     TextureFormat = 73
	TextureFormat_ASTC6x5Unorm         TextureFormat = 74
	TextureFormat_ASTC6x5UnormSrgb     TextureFormat = 75
	TextureFormat_ASTC6x6Unorm         TextureFormat = 76
	TextureFormat_ASTC6x6UnormSrgb     TextureFormat = 77
	TextureFormat_ASTC8x5Unorm         TextureFormat = 78
	TextureFormat_ASTC8x5UnormSrgb     TextureFormat = 79
	TextureFormat_ASTC8x6Unorm         TextureFormat = 80
	TextureFormat_ASTC8x6UnormSrgb     TextureFormat = 81
	TextureFormat_ASTC8x8Unorm         TextureFormat = 82
	TextureFormat_ASTC8x8UnormSrgb     TextureFormat = 83
	TextureFormat_ASTC10x5Unorm        TextureFormat = 84
	TextureFormat_ASTC10x5UnormSrgb    TextureFormat = 85
	TextureFormat_ASTC10x6Unorm        TextureFormat = 86
	TextureFormat_ASTC10x6UnormSrgb    TextureFormat = 87
	TextureFormat_ASTC10x8Unorm        TextureFormat = 88
	TextureFormat_ASTC10x8UnormSrgb    TextureFormat = 89
	TextureFormat_ASTC10x10Unorm       TextureFormat = 90
	TextureFormat_ASTC10x10UnormSrgb   TextureFormat = 91
	TextureFormat_ASTC12x10Unorm       TextureFormat = 92
	TextureFormat_ASTC12x10UnormSrgb   TextureFormat = 93
	TextureFormat_ASTC12x12Unorm       TextureFormat = 94
	TextureFormat_ASTC12x12UnormSrgb   TextureFormat = 95
)

func (v TextureFormat) String() string {
	switch v {
	case TextureFormat_Undefined:
		return "Undefined"
	case TextureFormat_R8Unorm:
		return "R8Unorm"
	case TextureFormat_R8Snorm:
		return "R8Snorm"
	case TextureFormat_R8Uint:
		return "R8Uint"
	case TextureFormat_R8Sint:
		return "R8Sint"
	case TextureFormat_R16Uint:
		return "R16Uint"
	case TextureFormat_R16Sint:
		return "R16Sint"
	case TextureFormat_R16Float:
		return "R16Float"
	case TextureFormat_RG8Unorm:
		return "RG8Unorm"
	case TextureFormat_RG8Snorm:
		return "RG8Snorm"
	case TextureFormat_RG8Uint:
		return "RG8Uint"
	case TextureFormat_RG8Sint:
		return "RG8Sint"
	case TextureFormat_R32Float:
		return "R32Float"
	case TextureFormat_R32Uint:
		return "R32Uint"
	case TextureFormat_R32Sint:
		return "R32Sint"
	case TextureFormat_RG16Uint:
		return "RG16Uint"
	case TextureFormat_RG16Sint:
		return "RG16Sint"
	case TextureFormat_RG16Float:
		return "RG16Float"
	case TextureFormat_RGBA8Unorm:
		return "RGBA8Unorm"
	case TextureFormat_RGBA8UnormSrgb:
		return "RGBA8UnormSrgb"
	case TextureFormat_RGBA8Snorm:
		return "RGBA8Snorm"
	case TextureFormat_RGBA8Uint:
		return "RGBA8Uint"
	case TextureFormat_RGBA8Sint:
		return "RGBA8Sint"
	case TextureFormat_BGRA8Unorm:
		return "BGRA8Unorm"
	case TextureFormat_BGRA8UnormSrgb:
		return "BGRA8UnormSrgb"
	case TextureFormat_RGB10A2Unorm:
		return "RGB10A2Unorm"
	case TextureFormat_RG11B10Ufloat:
		return "RG11B10Ufloat"
	case TextureFormat_RGB9E5Ufloat:
		return "RGB9E5Ufloat"
	case TextureFormat_RG32Float:
		return "RG32Float"
	case TextureFormat_RG32Uint:
		return "RG32Uint"
	case TextureFormat_RG32Sint:
		return "RG32Sint"
	case TextureFormat_RGBA16Uint:
		return "RGBA16Uint"
	case TextureFormat_RGBA16Sint:
		return "RGBA16Sint"
	case TextureFormat_RGBA16Float:
		return "RGBA16Float"
	case TextureFormat_RGBA32Float:
		return "RGBA32Float"
	case TextureFormat_RGBA32Uint:
		return "RGBA32Uint"
	case TextureFormat_RGBA32Sint:
		return "RGBA32Sint"
	case TextureFormat_Stencil8:
		return "Stencil8"
	case TextureFormat_Depth16Unorm:
		return "Depth16Unorm"
	case TextureFormat_Depth24Plus:
		return "Depth24Plus"
	case TextureFormat_Depth24PlusStencil8:
		return "Depth24PlusStencil8"
	case TextureFormat_Depth24UnormStencil8:
		return "Depth24UnormStencil8"
	case TextureFormat_Depth32Float:
		return "Depth32Float"
	case TextureFormat_Depth32FloatStencil8:
		return "Depth32FloatStencil8"
	case TextureFormat_BC1RGBAUnorm:
		return "BC1RGBAUnorm"
	case TextureFormat_BC1RGBAUnormSrgb:
		return "BC1RGBAUnormSrgb"
	case TextureFormat_BC2RGBAUnorm:
		return "BC2RGBAUnorm"
	case TextureFormat_BC2RGBAUnormSrgb:
		return "BC2RGBAUnormSrgb"
	case TextureFormat_BC3RGBAUnorm:
		return "BC3RGBAUnorm"
	case TextureFormat_BC3RGBAUnormSrgb:
		return "BC3RGBAUnormSrgb"
	case TextureFormat_BC4RUnorm:
		return "BC4RUnorm"
	case TextureFormat_BC4RSnorm:
		return "BC4RSnorm"
	case TextureFormat_BC5RGUnorm:
		return "BC5RGUnorm"
	case TextureFormat_BC5RGSnorm:
		return "BC5RGSnorm"
	case TextureFormat_BC6HRGBUfloat:
		return "BC6HRGBUfloat"
	case TextureFormat_BC6HRGBFloat:
		return "BC6HRGBFloat"
	case TextureFormat_BC7RGBAUnorm:
		return "BC7RGBAUnorm"
	case TextureFormat_BC7RGBAUnormSrgb:
		return "BC7RGBAUnormSrgb"
	case TextureFormat_ETC2RGB8Unorm:
		return "ETC2RGB8Unorm"
	case TextureFormat_ETC2RGB8UnormSrgb:
		return "ETC2RGB8UnormSrgb"
	case TextureFormat_ETC2RGB8A1Unorm:
		return "ETC2RGB8A1Unorm"
	case TextureFormat_ETC2RGB8A1UnormSrgb:
		return "ETC2RGB8A1UnormSrgb"
	case TextureFormat_ETC2RGBA8Unorm:
		return "ETC2RGBA8Unorm"
	case TextureFormat_ETC2RGBA8UnormSrgb:
		return "ETC2RGBA8UnormSrgb"
	case TextureFormat_EACR11Unorm:
		return "EACR11Unorm"
	case TextureFormat_EACR11Snorm:
		return "EACR11Snorm"
	case TextureFormat_EACRG11Unorm:
		return "EACRG11Unorm"
	case TextureFormat_EACRG11Snorm:
		return "EACRG11Snorm"
	case TextureFormat_ASTC4x4Unorm:
		return "ASTC4x4Unorm"
	case TextureFormat_ASTC4x4UnormSrgb:
		return "ASTC4x4UnormSrgb"
	case TextureFormat_ASTC5x4Unorm:
		return "ASTC5x4Unorm"
	case TextureFormat_ASTC5x4UnormSrgb:
		return "ASTC5x4UnormSrgb"
	case TextureFormat_ASTC5x5Unorm:
		return "ASTC5x5Unorm"
	case TextureFormat_ASTC5x5UnormSrgb:
		return "ASTC5x5UnormSrgb"
	case TextureFormat_ASTC6x5Unorm:
		return "ASTC6x5Unorm"
	case TextureFormat_ASTC6x5UnormSrgb:
		return "ASTC6x5UnormSrgb"
	case TextureFormat_ASTC6x6Unorm:
		return "ASTC6x6Unorm"
	case TextureFormat_ASTC6x6UnormSrgb:
		return "ASTC6x6UnormSrgb"
	case TextureFormat_ASTC8x5Unorm:
		return "ASTC8x5Unorm"
	case TextureFormat_ASTC8x5UnormSrgb:
		return "ASTC8x5UnormSrgb"
	case TextureFormat_ASTC8x6Unorm:
		return "ASTC8x6Unorm"
	case TextureFormat_ASTC8x6UnormSrgb:
		return "ASTC8x6UnormSrgb"
	case TextureFormat_ASTC8x8Unorm:
		return "ASTC8x8Unorm"
	case TextureFormat_ASTC8x8UnormSrgb:
		return "ASTC8x8UnormSrgb"
	case TextureFormat_ASTC10x5Unorm:
		return "ASTC10x5Unorm"
	case TextureFormat_ASTC10x5UnormSrgb:
		return "ASTC10x5UnormSrgb"
	case TextureFormat_ASTC10x6Unorm:
		return "ASTC10x6Unorm"
	case TextureFormat_ASTC10x6UnormSrgb:
		return "ASTC10x6UnormSrgb"
	case TextureFormat_ASTC10x8Unorm:
		return "ASTC10x8Unorm"
	case TextureFormat_ASTC10x8UnormSrgb:
		return "ASTC10x8UnormSrgb"
	case TextureFormat_ASTC10x10Unorm:
		return "ASTC10x10Unorm"
	case TextureFormat_ASTC10x10UnormSrgb:
		return "ASTC10x10UnormSrgb"
	case TextureFormat_ASTC12x10Unorm:
		return "ASTC12x10Unorm"
	case TextureFormat_ASTC12x10UnormSrgb:
		return "ASTC12x10UnormSrgb"
	case TextureFormat_ASTC12x12Unorm:
		return "ASTC12x12Unorm"
	case TextureFormat_ASTC12x12UnormSrgb:
		return "ASTC12x12UnormSrgb"
	default:
		return ""
	}
}

type TextureSampleType uint32

const (
	TextureSampleType_Undefined         TextureSampleType = 0
	TextureSampleType_Float             TextureSampleType = 1
	TextureSampleType_UnfilterableFloat TextureSampleType = 2
	TextureSampleType_Depth             TextureSampleType = 3
	TextureSampleType_Sint              TextureSampleType = 4
	TextureSampleType_Uint              TextureSampleType = 5
)

func (v TextureSampleType) String() string {
	switch v {
	case TextureSampleType_Undefined:
		return "Undefined"
	case TextureSampleType_Float:
		return "Float"
	case TextureSampleType_UnfilterableFloat:
		return "UnfilterableFloat"
	case TextureSampleType_Depth:
		return "Depth"
	case TextureSampleType_Sint:
		return "Sint"
	case TextureSampleType_Uint:
		return "Uint"
	default:
		return ""
	}
}

type TextureUsage uint32

const (
	TextureUsage_None             TextureUsage = 0
	TextureUsage_CopySrc          TextureUsage = 1
	TextureUsage_CopyDst          TextureUsage = 2
	TextureUsage_TextureBinding   TextureUsage = 4
	TextureUsage_StorageBinding   TextureUsage = 8
	TextureUsage_RenderAttachment TextureUsage = 16
)

func (v TextureUsage) String() string {
	switch v {
	case TextureUsage_None:
		return "None"
	case TextureUsage_CopySrc:
		return "CopySrc"
	case TextureUsage_CopyDst:
		return "CopyDst"
	case TextureUsage_TextureBinding:
		return "TextureBinding"
	case TextureUsage_StorageBinding:
		return "StorageBinding"
	case TextureUsage_RenderAttachment:
		return "RenderAttachment"
	default:
		return ""
	}
}

type TextureViewDimension uint32

const (
	TextureViewDimension_Undefined TextureViewDimension = 0
	TextureViewDimension_1D        TextureViewDimension = 1
	TextureViewDimension_2D        TextureViewDimension = 2
	TextureViewDimension_2DArray   TextureViewDimension = 3
	TextureViewDimension_Cube      TextureViewDimension = 4
	TextureViewDimension_CubeArray TextureViewDimension = 5
	TextureViewDimension_3D        TextureViewDimension = 6
)

func (v TextureViewDimension) String() string {
	switch v {
	case TextureViewDimension_Undefined:
		return "Undefined"
	case TextureViewDimension_1D:
		return "1D"
	case TextureViewDimension_2D:
		return "2D"
	case TextureViewDimension_2DArray:
		return "2DArray"
	case TextureViewDimension_Cube:
		return "Cube"
	case TextureViewDimension_CubeArray:
		return "CubeArray"
	case TextureViewDimension_3D:
		return "3D"
	default:
		return ""
	}
}

type VertexFormat uint32

const (
	VertexFormat_Undefined VertexFormat = 0
	VertexFormat_Uint8x2   VertexFormat = 1
	VertexFormat_Uint8x4   VertexFormat = 2
	VertexFormat_Sint8x2   VertexFormat = 3
	VertexFormat_Sint8x4   VertexFormat = 4
	VertexFormat_Unorm8x2  VertexFormat = 5
	VertexFormat_Unorm8x4  VertexFormat = 6
	VertexFormat_Snorm8x2  VertexFormat = 7
	VertexFormat_Snorm8x4  VertexFormat = 8
	VertexFormat_Uint16x2  VertexFormat = 9
	VertexFormat_Uint16x4  VertexFormat = 10
	VertexFormat_Sint16x2  VertexFormat = 11
	VertexFormat_Sint16x4  VertexFormat = 12
	VertexFormat_Unorm16x2 VertexFormat = 13
	VertexFormat_Unorm16x4 VertexFormat = 14
	VertexFormat_Snorm16x2 VertexFormat = 15
	VertexFormat_Snorm16x4 VertexFormat = 16
	VertexFormat_Float16x2 VertexFormat = 17
	VertexFormat_Float16x4 VertexFormat = 18
	VertexFormat_Float32   VertexFormat = 19
	VertexFormat_Float32x2 VertexFormat = 20
	VertexFormat_Float32x3 VertexFormat = 21
	VertexFormat_Float32x4 VertexFormat = 22
	VertexFormat_Uint32    VertexFormat = 23
	VertexFormat_Uint32x2  VertexFormat = 24
	VertexFormat_Uint32x3  VertexFormat = 25
	VertexFormat_Uint32x4  VertexFormat = 26
	VertexFormat_Sint32    VertexFormat = 27
	VertexFormat_Sint32x2  VertexFormat = 28
	VertexFormat_Sint32x3  VertexFormat = 29
	VertexFormat_Sint32x4  VertexFormat = 30
)

func (v VertexFormat) String() string {
	switch v {
	case VertexFormat_Undefined:
		return "Undefined"
	case VertexFormat_Uint8x2:
		return "Uint8x2"
	case VertexFormat_Uint8x4:
		return "Uint8x4"
	case VertexFormat_Sint8x2:
		return "Sint8x2"
	case VertexFormat_Sint8x4:
		return "Sint8x4"
	case VertexFormat_Unorm8x2:
		return "Unorm8x2"
	case VertexFormat_Unorm8x4:
		return "Unorm8x4"
	case VertexFormat_Snorm8x2:
		return "Snorm8x2"
	case VertexFormat_Snorm8x4:
		return "Snorm8x4"
	case VertexFormat_Uint16x2:
		return "Uint16x2"
	case VertexFormat_Uint16x4:
		return "Uint16x4"
	case VertexFormat_Sint16x2:
		return "Sint16x2"
	case VertexFormat_Sint16x4:
		return "Sint16x4"
	case VertexFormat_Unorm16x2:
		return "Unorm16x2"
	case VertexFormat_Unorm16x4:
		return "Unorm16x4"
	case VertexFormat_Snorm16x2:
		return "Snorm16x2"
	case VertexFormat_Snorm16x4:
		return "Snorm16x4"
	case VertexFormat_Float16x2:
		return "Float16x2"
	case VertexFormat_Float16x4:
		return "Float16x4"
	case VertexFormat_Float32:
		return "Float32"
	case VertexFormat_Float32x2:
		return "Float32x2"
	case VertexFormat_Float32x3:
		return "Float32x3"
	case VertexFormat_Float32x4:
		return "Float32x4"
	case VertexFormat_Uint32:
		return "Uint32"
	case VertexFormat_Uint32x2:
		return "Uint32x2"
	case VertexFormat_Uint32x3:
		return "Uint32x3"
	case VertexFormat_Uint32x4:
		return "Uint32x4"
	case VertexFormat_Sint32:
		return "Sint32"
	case VertexFormat_Sint32x2:
		return "Sint32x2"
	case VertexFormat_Sint32x3:
		return "Sint32x3"
	case VertexFormat_Sint32x4:
		return "Sint32x4"
	default:
		return ""
	}
}

type VertexStepMode uint32

const (
	VertexStepMode_Vertex   VertexStepMode = 0
	VertexStepMode_Instance VertexStepMode = 1
)

func (v VertexStepMode) String() string {
	switch v {
	case VertexStepMode_Vertex:
		return "Vertex"
	case VertexStepMode_Instance:
		return "Instance"
	default:
		return ""
	}
}
